<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find camera_simulation)/worlds/camera.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find camera_simulation)/urdf/camera.xacro'" />
  
  <!-- Run a python script to the send a service call to gazebo_ros to spawn the two cameras -->
  <group ns = "camera1">
    <param name="tf_prefix" value="camera1_tf" />
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args="-x 5 -y 0 -z 0 -urdf -model camera1 -param /robot_description"/>
  </group>

  <group ns = "camera2">
    <param name="tf_prefix" value="camera2_tf" />
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-x -5 -y 0 -z 0 -urdf -model camera2 -param /robot_description"/>
  </group>
  
  <!-- Spawn a moving sphere-->
  <!-- <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-file /home/pedro/camera_ws/src/camera_simulation/urdf/cloud.sdf -sdf -model my_cloud"/>-->
  
  <node name="image1_viewer" pkg="image_view" type="image_view" args="image:=/camera1/camera/image_raw"/>
  <node name="image2_viewer" pkg="image_view" type="image_view" args="image:=/camera2/camera/image_raw"/>
  <!-- ros_control rrbot launch file -->
  <!--include file="$(find rrbot_control)/launch/rrbot_control.launch" /-->

</launch>
